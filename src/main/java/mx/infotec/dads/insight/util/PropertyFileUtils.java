package mx.infotec.dads.insight.util;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Properties;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import mx.infotec.dads.insight.pdes.exceptions.ReportRuntimeException;

/**
 * Clase util para la generación y administración de archivos de propiedades.
 * 
 * @author Daniel Cortes Pichardo
 *
 */
public class PropertyFileUtils {
    private static final Logger LOGGER = LoggerFactory.getLogger(PropertyFileUtils.class);

    private PropertyFileUtils() {

    }

    public static UrlPd loadUrlContext() {
	try {
	    Properties mainProperties = new Properties();
	    FileInputStream file;
	    String path = Constants.FILE_PDES_PROPERTIES;
	    file = new FileInputStream(path);
	    mainProperties.load(file);
	    file.close();
	    return UrlPd.createUrl().withHost(Constants.PDES_CLIENT_HOST_NAME).withScheme(Constants.PDES_SCHEME)
		    .withPort(mainProperties.getProperty(Constants.PROPERTY_PORT))
		    .withProjectName(mainProperties.getProperty(Constants.PROPERTY_PROJECT));
	} catch (IOException e) {
	    throw new ReportRuntimeException("loadUrlContext", e);
	}
    }

    public static void saveProperties(Properties prop) {
	try {
	    File f = new File(Constants.FILE_PDES_PROPERTIES);
	    OutputStream out = new FileOutputStream(f);
	    prop.store(out, "WARNING: DO NOT EDIT THIS FILE.\nTHIS FILE IS MANAGED BY BRAIN");
	} catch (Exception e) {
	    LOGGER.error("saveProperties", e);
	}
    }
}
